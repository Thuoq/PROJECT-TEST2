{"ast":null,"code":"import { takeLatest, all, call, put, select } from 'redux-saga/effects';\nimport CHECKOUT_ACTIONS_TYPE from './check-out.types';\nimport { selectCurrentUser } from '../user/user.selector';\nimport { selectCartItem, selectTotalPrice } from '../cart/cart.selector';\nexport function fetchBookingToServer(data) {\n  let token = \"Bear \" + JSON.parse(localStorage.getItem(\"login\"));\n  return axios(`http://localhost:2222/booking`, {\n    method: \"POST\",\n    headers: {\n      'Authorization': token\n    },\n    data: data\n  });\n}\nexport function* checkOut({\n  payload\n}) {\n  const currentUser = yield select(selectCurrentUser);\n  const cartItem = yield select(selectCartItem);\n  const totalMoney = yield select(selectTotalPrice);\n  const data = Object.assign({}, {\n    cart: cartItem,\n    totalMoney,\n    address: payload,\n    idUser: currentUser._id\n  });\n  const response = yield call(fetchBookingToServer, data);\n  console.log(response);\n}\nexport function* onCheckoutStart() {\n  yield takeLatest(CHECKOUT_ACTIONS_TYPE.CHECK_OUT_START, checkOut);\n}\nexport function* checkOutSagas() {\n  yield all([call(onCheckOutStart)]);\n}","map":{"version":3,"sources":["/Users/thuongle/Desktop/e-ecommerce/client/src/redux/check-out/check-out.sagas.js"],"names":["takeLatest","all","call","put","select","CHECKOUT_ACTIONS_TYPE","selectCurrentUser","selectCartItem","selectTotalPrice","fetchBookingToServer","data","token","JSON","parse","localStorage","getItem","axios","method","headers","checkOut","payload","currentUser","cartItem","totalMoney","Object","assign","cart","address","idUser","_id","response","console","log","onCheckoutStart","CHECK_OUT_START","checkOutSagas","onCheckOutStart"],"mappings":"AACA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,IAAzB,EAA8BC,GAA9B,EAAoCC,MAApC,QAAiD,oBAAjD;AACA,OAAOC,qBAAP,MAAkC,mBAAlC;AACA,SAAQC,iBAAR,QAAgC,uBAAhC;AACA,SAAQC,cAAR,EAAyBC,gBAAzB,QAAgD,uBAAhD;AAEA,OAAO,SAASC,oBAAT,CAA+BC,IAA/B,EAAqC;AACxC,MAAIC,KAAK,GAAG,UAAUC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAtB;AACA,SAAOC,KAAK,CAAE,+BAAF,EAAkC;AAC1CC,IAAAA,MAAM,EAAG,MADiC;AAE1CC,IAAAA,OAAO,EAAG;AACN,uBAAiBP;AADX,KAFgC;AAK1CD,IAAAA,IAAI,EAAGA;AALmC,GAAlC,CAAZ;AAOH;AAID,OAAO,UAAUS,QAAV,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA8B;AACjC,QAAMC,WAAW,GAAG,MAAMjB,MAAM,CAACE,iBAAD,CAAhC;AACA,QAAMgB,QAAQ,GAAG,MAAMlB,MAAM,CAACG,cAAD,CAA7B;AACA,QAAMgB,UAAU,GAAG,MAAMnB,MAAM,CAACI,gBAAD,CAA/B;AACA,QAAME,IAAI,GAAGc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAmB;AAC5BC,IAAAA,IAAI,EAACJ,QADuB;AAE5BC,IAAAA,UAF4B;AAG5BI,IAAAA,OAAO,EAAEP,OAHmB;AAI5BQ,IAAAA,MAAM,EAAGP,WAAW,CAACQ;AAJO,GAAnB,CAAb;AAMA,QAAMC,QAAQ,GAAG,MAAM5B,IAAI,CAACO,oBAAD,EAAsBC,IAAtB,CAA3B;AACAqB,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH;AAED,OAAO,UAAUG,eAAV,GAA6B;AAChC,QAAMjC,UAAU,CAACK,qBAAqB,CAAC6B,eAAvB,EAAwCf,QAAxC,CAAhB;AACH;AAID,OAAO,UAAUgB,aAAV,GAA2B;AAC9B,QAAMlC,GAAG,CAAC,CAACC,IAAI,CAAEkC,eAAF,CAAL,CAAD,CAAT;AACH","sourcesContent":["\nimport {takeLatest, all, call,put , select} from 'redux-saga/effects';\nimport CHECKOUT_ACTIONS_TYPE from './check-out.types';\nimport {selectCurrentUser} from '../user/user.selector';\nimport {selectCartItem , selectTotalPrice} from '../cart/cart.selector';\n\nexport function fetchBookingToServer (data) {\n    let token = \"Bear \" + JSON.parse(localStorage.getItem(\"login\"));\n    return axios(`http://localhost:2222/booking`, {\n        method : \"POST\",\n        headers : {\n            'Authorization': token\n        }, \n        data : data\n    })\n}\n\n\n\nexport function *checkOut({payload}) {\n    const currentUser = yield select(selectCurrentUser);\n    const cartItem = yield select(selectCartItem);\n    const totalMoney = yield select(selectTotalPrice);\n    const data = Object.assign({} , {\n        cart:cartItem,\n        totalMoney,\n        address: payload,\n        idUser : currentUser._id\n    })\n    const response = yield call(fetchBookingToServer,data);\n    console.log(response);\n}\n\nexport function *onCheckoutStart () {\n    yield takeLatest(CHECKOUT_ACTIONS_TYPE.CHECK_OUT_START, checkOut)\n}\n\n\n\nexport function* checkOutSagas () {\n    yield all([call (onCheckOutStart)])\n} "]},"metadata":{},"sourceType":"module"}