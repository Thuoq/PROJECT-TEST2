{"ast":null,"code":"import { takeLatest, all, call, put, select } from 'redux-saga/effects';\nimport axios from 'axios';\nimport USER_ACTIONS_TYPES from '../user/user.types';\nimport { setCurrentUser, signOutSuccess } from '../user/user.action';\nimport { selectCurrentUser } from './user.selector';\nexport function fetchUserToServer(data, type) {\n  return axios(`http://localhost:2222/user/${type}`, {\n    method: \"post\",\n    data: data\n  });\n}\nexport function fetchUpdateAddressToServer(idUser, data) {\n  let token = \"Bearer \" + JSON.parse(localStorage.getItem(\"login\"));\n  return axios(`http://localhost:2222/user/address`, {\n    method: \"POST\",\n    headers: {\n      'Authorization': token\n    },\n    data: data\n  });\n}\nexport function* signUp({\n  payload\n}) {\n  const {\n    data: {\n      data: {\n        user\n      },\n      token\n    }\n  } = yield call(fetchUserToServer, payload, \"register\");\n  yield put(setCurrentUser(user));\n  localStorage.setItem(\"login\", JSON.stringify(token));\n}\nexport function* signIn({\n  payload\n}) {\n  const {\n    data: {\n      data: {\n        user\n      },\n      token\n    }\n  } = yield call(fetchUserToServer, payload, \"signIn\");\n  yield put(setCurrentUser(user));\n  localStorage.setItem(\"login\", JSON.stringify(token));\n}\nexport function* signOut() {\n  localStorage.removeItem(\"login\");\n  yield put(signOutSuccess());\n}\nexport function* updateAddressCheckOut({\n  payload\n}) {\n  const currentUser = yield select(selectCurrentUser);\n  yield console.log(payload);\n  const {\n    data: {\n      data: {\n        user\n      }\n    }\n  } = call(fetchUpdateAddressToServer, currentUser._id, payload);\n  yield put(setCurrentUser(user));\n}\nexport function* onSignOutStart() {\n  yield takeLatest(USER_ACTIONS_TYPES.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(USER_ACTIONS_TYPES.SIGN_UP_START, signUp);\n}\nexport function* onSignInStart() {\n  yield takeLatest(USER_ACTIONS_TYPES.SIGN_IN_START, signIn);\n}\nexport function* onUpdateAddress() {\n  yield takeLatest(USER_ACTIONS_TYPES.UPDATE_ADDRESS_START, updateAddressCheckOut);\n}\nexport function* userSagas() {\n  yield all([call(onSignUpStart), call(onSignInStart), call(onSignOutStart), call(onUpdateAddress)]);\n}","map":{"version":3,"sources":["/Users/thuongle/Desktop/e-ecommerce/client/src/redux/user/user.sagas.js"],"names":["takeLatest","all","call","put","select","axios","USER_ACTIONS_TYPES","setCurrentUser","signOutSuccess","selectCurrentUser","fetchUserToServer","data","type","method","fetchUpdateAddressToServer","idUser","token","JSON","parse","localStorage","getItem","headers","signUp","payload","user","setItem","stringify","signIn","signOut","removeItem","updateAddressCheckOut","currentUser","console","log","_id","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignInStart","SIGN_IN_START","onUpdateAddress","UPDATE_ADDRESS_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,IAAzB,EAA8BC,GAA9B,EAAmCC,MAAnC,QAAgD,oBAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,oBAA/B;AACA,SAAQC,cAAR,EAAuBC,cAAvB,QAA4C,qBAA5C;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AAGA,OAAO,SAASC,iBAAT,CAA4BC,IAA5B,EAAiCC,IAAjC,EAAuC;AAC1C,SAAOP,KAAK,CAAE,8BAA6BO,IAAK,EAApC,EAAsC;AAC9CC,IAAAA,MAAM,EAAE,MADsC;AAE9CF,IAAAA,IAAI,EAAEA;AAFwC,GAAtC,CAAZ;AAIH;AAED,OAAO,SAASG,0BAAT,CAAoCC,MAApC,EAA2CJ,IAA3C,EAAiD;AACpD,MAAIK,KAAK,GAAG,YAAYC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAxB;AACA,SAAOf,KAAK,CAAE,oCAAF,EAAuC;AAC/CQ,IAAAA,MAAM,EAAG,MADsC;AAE/CQ,IAAAA,OAAO,EAAG;AACN,uBAAiBL;AADX,KAFqC;AAK/CL,IAAAA,IAAI,EAAGA;AALwC,GAAvC,CAAZ;AAOH;AAKD,OAAO,UAAWW,MAAX,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA6B;AACjC,QAAM;AAACZ,IAAAA,IAAI,EAAG;AAACA,MAAAA,IAAI,EAAG;AAACa,QAAAA;AAAD,OAAR;AAAeR,MAAAA;AAAf;AAAR,MAAiC,MAAMd,IAAI,CAACQ,iBAAD,EAAmBa,OAAnB,EAA2B,UAA3B,CAAjD;AACA,QAAMpB,GAAG,CAACI,cAAc,CAACiB,IAAD,CAAf,CAAT;AACAL,EAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA6BR,IAAI,CAACS,SAAL,CAAeV,KAAf,CAA7B;AACF;AAED,OAAO,UAAUW,MAAV,CAAiB;AAACJ,EAAAA;AAAD,CAAjB,EAA4B;AAC/B,QAAM;AAACZ,IAAAA,IAAI,EAAG;AAACA,MAAAA,IAAI,EAAG;AAACa,QAAAA;AAAD,OAAR;AAAeR,MAAAA;AAAf;AAAR,MAAiC,MAAMd,IAAI,CAACQ,iBAAD,EAAmBa,OAAnB,EAA4B,QAA5B,CAAjD;AACA,QAAMpB,GAAG,CAACI,cAAc,CAACiB,IAAD,CAAf,CAAT;AACAL,EAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA6BR,IAAI,CAACS,SAAL,CAAeV,KAAf,CAA7B;AACH;AAED,OAAO,UAAUY,OAAV,GAAoB;AACvBT,EAAAA,YAAY,CAACU,UAAb,CAAwB,OAAxB;AACA,QAAM1B,GAAG,CAACK,cAAc,EAAf,CAAT;AACH;AAED,OAAO,UAAUsB,qBAAV,CAAgC;AAACP,EAAAA;AAAD,CAAhC,EAA2C;AAC9C,QAAMQ,WAAW,GAAI,MAAM3B,MAAM,CAACK,iBAAD,CAAjC;AACA,QAAMuB,OAAO,CAACC,GAAR,CAAYV,OAAZ,CAAN;AACA,QAAM;AAACZ,IAAAA,IAAI,EAAG;AAACA,MAAAA,IAAI,EAAG;AAACa,QAAAA;AAAD;AAAR;AAAR,MAA2BtB,IAAI,CAACY,0BAAD,EAA4BiB,WAAW,CAACG,GAAxC,EAA6CX,OAA7C,CAArC;AACA,QAAMpB,GAAG,CAACI,cAAc,CAACiB,IAAD,CAAf,CAAT;AACH;AAED,OAAO,UAAUW,cAAV,GAA2B;AAC9B,QAAMnC,UAAU,CAACM,kBAAkB,CAAC8B,cAApB,EAAoCR,OAApC,CAAhB;AACH;AAGD,OAAO,UAAUS,aAAV,GAA0B;AAC7B,QAAMrC,UAAU,CAACM,kBAAkB,CAACgC,aAApB,EAAkChB,MAAlC,CAAhB;AACH;AACD,OAAO,UAAUiB,aAAV,GAA0B;AAC7B,QAAMvC,UAAU,CAACM,kBAAkB,CAACkC,aAApB,EAAkCb,MAAlC,CAAhB;AACH;AAED,OAAO,UAAUc,eAAV,GAA4B;AAC/B,QAAMzC,UAAU,CAACM,kBAAkB,CAACoC,oBAApB,EAA0CZ,qBAA1C,CAAhB;AACH;AAGD,OAAO,UAAUa,SAAV,GAAsB;AACzB,QAAM1C,GAAG,CAAC,CACNC,IAAI,CAACmC,aAAD,CADE,EAENnC,IAAI,CAACqC,aAAD,CAFE,EAGNrC,IAAI,CAACiC,cAAD,CAHE,EAINjC,IAAI,CAACuC,eAAD,CAJE,CAAD,CAAT;AAMH","sourcesContent":["import {takeLatest, all, call,put ,select} from 'redux-saga/effects';\nimport axios from 'axios';\nimport USER_ACTIONS_TYPES from '../user/user.types';\nimport {setCurrentUser,signOutSuccess} from '../user/user.action';\nimport { selectCurrentUser } from './user.selector';\n\n\nexport function fetchUserToServer (data,type) {\n    return axios(`http://localhost:2222/user/${type}`,{\n        method: \"post\",\n        data: data\n    })\n}\n\nexport function fetchUpdateAddressToServer(idUser,data) {\n    let token = \"Bearer \" + JSON.parse(localStorage.getItem(\"login\"));\n    return axios(`http://localhost:2222/user/address`, {\n        method : \"POST\",\n        headers : {\n            'Authorization': token\n        }, \n        data : data\n    })\n}\n\n\n\n\nexport function * signUp({payload}) {\n   const {data : {data : {user},token}} = yield call(fetchUserToServer,payload,\"register\");\n   yield put(setCurrentUser(user));\n   localStorage.setItem(\"login\",JSON.stringify(token))\n}\n\nexport function* signIn({payload}) {\n    const {data : {data : {user},token}} = yield call(fetchUserToServer,payload, \"signIn\");\n    yield put(setCurrentUser(user));\n    localStorage.setItem(\"login\",JSON.stringify(token))\n}\n\nexport function* signOut() {\n    localStorage.removeItem(\"login\")\n    yield put(signOutSuccess())\n}\n\nexport function* updateAddressCheckOut({payload}) {\n    const currentUser =  yield select(selectCurrentUser);\n    yield console.log(payload)\n    const {data : {data : {user}}} = call(fetchUpdateAddressToServer,currentUser._id, payload);\n    yield put(setCurrentUser(user))\n}\n\nexport function* onSignOutStart() {\n    yield takeLatest(USER_ACTIONS_TYPES.SIGN_OUT_START, signOut)\n}\n\n\nexport function* onSignUpStart() {\n    yield takeLatest(USER_ACTIONS_TYPES.SIGN_UP_START,signUp);\n}\nexport function* onSignInStart() {\n    yield takeLatest(USER_ACTIONS_TYPES.SIGN_IN_START,signIn)\n}\n\nexport function* onUpdateAddress() {\n    yield takeLatest(USER_ACTIONS_TYPES.UPDATE_ADDRESS_START, updateAddressCheckOut)\n}\n\n\nexport function* userSagas() {\n    yield all([\n        call(onSignUpStart),\n        call(onSignInStart),\n        call(onSignOutStart),\n        call(onUpdateAddress)\n    ])\n}"]},"metadata":{},"sourceType":"module"}