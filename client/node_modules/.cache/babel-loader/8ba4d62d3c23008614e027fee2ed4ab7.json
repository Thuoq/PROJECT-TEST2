{"ast":null,"code":"var _jsxFileName = \"/Users/thuongle/Desktop/e-ecommerce/client/src/pages/collection-page/collection-page.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { selectCollections, selectCurrentPage } from '../../redux/shop/shop.selector';\nimport './collection-page.styles.scss';\nimport { Layout, Input, Row, Col, Pagination } from 'antd';\nimport { getCollectionStart } from '../../redux/shop/shop.action';\nimport CardItem from '../../components/card-item/card-item.component';\nimport { createStructuredSelector } from 'reselect';\nconst {\n  Content\n} = Layout;\n\nconst CollectionPage = ({\n  currentPage,\n  match,\n  collections,\n  history,\n  getCollectionStart,\n  ...props\n}) => {\n  const [filedSearch, setFieldSearch] = useState(\" \");\n  const filterSearch = collections.filter(el => el.nameEN.toLowerCase().includes(filedSearch.toLowerCase()));\n  console.log(filterSearch);\n  return /*#__PURE__*/React.createElement(Layout, {\n    style: {\n      padding: '0 2.4rem 2.4rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Search By Category ... \",\n    onChange: e => setFieldSearch(e.target.value),\n    size: \"large\",\n    style: {\n      marginBottom: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Product  Pages\"), /*#__PURE__*/React.createElement(Content, {\n    className: \"site-layout-background\",\n    style: {\n      padding: 24,\n      margin: 0,\n      minHeight: 600\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [48, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, filterSearch.map((cartItem, idx) => /*#__PURE__*/React.createElement(Col, {\n    key: idx,\n    xs: 24,\n    sm: 12,\n    md: 8,\n    lg: 6,\n    className: \"gutter-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardItem, Object.assign({\n    key: idx,\n    cartItem: cartItem,\n    match: match,\n    history: history\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(Pagination, {\n    style: {\n      textAlign: 'center'\n    },\n    current: currentPage,\n    onChange: (page, pageSize) => {\n      getCollectionStart({\n        page,\n        limit: pageSize\n      });\n    },\n    total: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectCollections,\n  currentPage: selectCurrentPage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCollectionStart: pageAndLimit => dispatch(getCollectionStart(pageAndLimit))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CollectionPage);","map":{"version":3,"sources":["/Users/thuongle/Desktop/e-ecommerce/client/src/pages/collection-page/collection-page.component.jsx"],"names":["React","useState","connect","selectCollections","selectCurrentPage","Layout","Input","Row","Col","Pagination","getCollectionStart","CardItem","createStructuredSelector","Content","CollectionPage","currentPage","match","collections","history","props","filedSearch","setFieldSearch","filterSearch","filter","el","nameEN","toLowerCase","includes","console","log","padding","e","target","value","marginBottom","margin","minHeight","map","cartItem","idx","textAlign","page","pageSize","limit","mapStateToProps","mapDispatchToProps","dispatch","pageAndLimit"],"mappings":"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","sourcesContent":["import React  , {useState } from 'react';\nimport { connect } from 'react-redux';\nimport { selectCollections, selectCurrentPage } from '../../redux/shop/shop.selector';\nimport './collection-page.styles.scss';\nimport {\n  Layout, Input, Row, Col,Pagination\n} from 'antd';\nimport {getCollectionStart} from '../../redux/shop/shop.action'\nimport CardItem from '../../components/card-item/card-item.component';\nimport { createStructuredSelector } from 'reselect';\nconst { Content } = Layout;\n\n\n\nconst CollectionPage = ({currentPage,match,collections,history,getCollectionStart,...props}) => {\n  const [filedSearch , setFieldSearch] = useState(\" \");\n  const filterSearch = collections.filter(el => el.nameEN.toLowerCase().includes(filedSearch.toLowerCase()));\n  console.log(filterSearch)\n  \n  return( \n  <Layout style={{ padding: '0 2.4rem 2.4rem' }}>\n        <Input\n          placeholder=\"Search By Category ... \"\n          \n          onChange= {(e) => setFieldSearch(e.target.value) }\n          size=\"large\"\n          style={{ marginBottom: '2rem' }}\n        />\n        <h2>Product  Pages</h2>\n        <Content\n          className=\"site-layout-background\"\n          style={{\n            padding: 24,\n            margin: 0,\n            minHeight: 600,\n          }}\n        >\n          <Row gutter={[48, 24]}>\n            {\n              filterSearch.map((cartItem, idx) => (\n                <Col key={idx} xs={24} sm={12} md={8} lg={6} className=\"gutter-row\">\n                  <CardItem key={idx} cartItem={cartItem} match= {match} history={history} {...props} />\n                </Col>\n              ))\n            }\n          </Row>\n          <Pagination style={{textAlign:'center'}} current={currentPage}  onChange ={(page,pageSize) => {\n          \n            getCollectionStart({page, limit : pageSize})\n            \n          }} total={100} />\n        </Content>\n    </Layout>\n)}\n\n\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectCollections,\n  currentPage : selectCurrentPage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCollectionStart: (pageAndLimit) => dispatch(getCollectionStart(pageAndLimit)),\n\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(CollectionPage);\n"]},"metadata":{},"sourceType":"module"}