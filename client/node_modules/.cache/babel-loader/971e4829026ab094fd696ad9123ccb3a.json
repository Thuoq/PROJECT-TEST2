{"ast":null,"code":"var _jsxFileName = \"/Users/thuongle/Desktop/e-ecommerce/client/src/components/information-user/addAddress-user.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { createStructuredSelector } from 'reselect';\nimport { selectAddressName } from '../../redux/user/user.selector';\n\nconst AddAddressUser = ({\n  selectAddressName\n}) => {\n  console.log(selectAddressName);\n  return /*#__PURE__*/React.createElement(Form, {\n    layout: \"horizontal\",\n    style: {\n      flex: ' 0 0 50%'\n    },\n    initialValues: {\n      address: [selectAddressName]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.List, {\n    name: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, (fields, {\n    add,\n    remove\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, fields.map((field, index) => /*#__PURE__*/React.createElement(Form.Item, {\n      label: `Address ${index + 1}`,\n      required: false,\n      key: field.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, field, {\n      validateTrigger: [\"onChange\", \"onBlur\"],\n      rules: [{\n        required: true,\n        whitespace: true,\n        message: \"Please input Add Address or Delete this Address.\"\n      }],\n      noStyle: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Address details\",\n      style: {\n        width: \"60%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    })), fields.length >= 1 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MinusCircleOutlined, {\n      onClick: () => {\n        remove(field.name);\n      },\n      style: {\n        marginLeft: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 23\n      }\n    })) : null)), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"dashed\",\n      onClick: () => {\n        add();\n      },\n      style: {\n        width: \"60%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }), \" Add Address\")));\n  })));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  addressName: selectAddressName\n});\nexport default connect(mapStateToProps)(AddAddressUser);","map":{"version":3,"sources":["/Users/thuongle/Desktop/e-ecommerce/client/src/components/information-user/addAddress-user.component.jsx"],"names":["React","connect","Form","Input","Button","MinusCircleOutlined","PlusOutlined","createStructuredSelector","selectAddressName","AddAddressUser","console","log","flex","address","fields","add","remove","map","field","index","key","required","whitespace","message","width","length","name","marginLeft","mapStateToProps","addressName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {\n  Form, Input, Button,\n} from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { createStructuredSelector } from 'reselect';\nimport {  selectAddressName } from '../../redux/user/user.selector';\n\nconst AddAddressUser = ({selectAddressName}) => {\n  console.log(selectAddressName)\n  return(\n  <Form \n  layout=\"horizontal\" \n  style={{ flex: ' 0 0 50%' }} initialValues = {{address: [selectAddressName]}}>\n    <Form.Item>\n      <Form.List name=\"address\">\n      {(fields, { add, remove }) => {\n          return (\n            <div>\n              {fields.map((field, index) => (\n                <Form.Item\n                  \n                  label={ `Address ${index + 1}` }\n                  required={false}\n                  key={field.key}\n                >\n                  <Form.Item\n                    {...field}\n                    validateTrigger={[\"onChange\", \"onBlur\"]}\n                    rules={[\n                      {\n                        required: true,\n                        whitespace: true,\n                        message:\n                          \"Please input Add Address or Delete this Address.\"\n                      }\n                    ]}\n                    noStyle\n                  >\n                    <Input\n                      placeholder=\"Address details\"\n                      style={{ width: \"60%\" }}\n                    />\n                  </Form.Item>\n                  {fields.length >= 1 ? (\n                    <>\n                      \n                      <MinusCircleOutlined\n                        onClick={() => {\n                          remove(field.name);\n                        }}\n                        style = {{marginLeft:'1rem'}}\n                      />\n                    </> \n                  ) : null}\n                </Form.Item>\n              ))}\n              <Form.Item>\n                <Button\n                  type=\"dashed\"\n                  onClick={() => {\n                    add();\n                  }}\n                  style={{ width: \"60%\" }}\n                >\n                  <PlusOutlined   /> Add Address\n                </Button>\n              </Form.Item>\n            </div>\n          );\n        }}\n      </Form.List>\n    </Form.Item>\n  </Form>\n)};\n\n\nconst mapStateToProps = createStructuredSelector({\n  addressName : selectAddressName\n})\n\nexport default connect(mapStateToProps)(AddAddressUser) ;\n"]},"metadata":{},"sourceType":"module"}