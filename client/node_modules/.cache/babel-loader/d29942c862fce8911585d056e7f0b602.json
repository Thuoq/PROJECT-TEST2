{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport axios from 'axios';\nimport moment from 'moment';\nimport BOOKING_ACTION_TYPES from './booking-types';\nimport { getBookingSuccess } from './booking-action'; // function handleData (arr) {\n//     var fixedData = [];\n//     var temp = {}\n//     for(let i = 0 ; i < arr.length; i ++) {\n//       temp.createAt = moment(arr[i].createAt).format('MMMM Do YYYY')\n//       temp._id = arr[i]._id;\n//       temp.address = arr[i].address;\n//       temp.phoneNumber = arr[i].idUser.phoneNumber\n//       temp.key = new Date().getMilliseconds() * Math.random();\n//       for(let j = 0 ; j < arr[i].cart.length; j++) {\n//         temp.idProduct = arr[i].cart[j]._id.idProduct;\n//         temp.nameEN = arr[i].cart[j]._id.nameEN;\n//         temp.nameVN = arr[i].cart[j]._id.nameVN;\n//         temp.weight = arr[i].cart[j]._id.weight;\n//         temp.totalWeight =arr[i].cart[j]._id.totalWeight;\n//         temp.quantity = arr[i].cart[j].quantity;\n//         fixedData.push(temp);\n//       }\n//     }\n//     return fixedData;\n//   }\n\nexport function fetchBookingToServer() {\n  let token = \"Bearer \" + JSON.parse(localStorage.getItem(\"login\"));\n  return axios(`http://localhost:2222/booking`, {\n    method: \"get\",\n    headers: {\n      'Authorization': token\n    }\n  });\n}\nexport function* getBooking() {\n  const {\n    data: {\n      data: {\n        booking\n      }\n    }\n  } = yield call(fetchBookingToServer); // let data = handleData(booking)\n  //yield put(getBookingSuccess(data));\n}\nexport function* onGetBookingStart() {\n  yield takeLatest(BOOKING_ACTION_TYPES.GET_BOOKING_START, getBooking);\n}\nexport function* bookingSagas() {\n  yield all([call(onGetBookingStart)]);\n}","map":{"version":3,"sources":["/Users/thuongle/Desktop/e-ecommerce/client/src/redux/booking/booking-sagas.js"],"names":["takeLatest","call","put","all","axios","moment","BOOKING_ACTION_TYPES","getBookingSuccess","fetchBookingToServer","token","JSON","parse","localStorage","getItem","method","headers","getBooking","data","booking","onGetBookingStart","GET_BOOKING_START","bookingSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAqBC,IAArB,EAA4BC,GAA5B,EAAkCC,GAAlC,QAA6C,oBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,oBAAP,MAAiC,iBAAjC;AACA,SAASC,iBAAT,QAAkC,kBAAlC,C,CAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,SAASC,oBAAT,GAAgC;AACnC,MAAIC,KAAK,GAAG,YAAYC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAxB;AACA,SAAOT,KAAK,CAAE,+BAAF,EAAiC;AACzCU,IAAAA,MAAM,EAAE,KADiC;AAEzCC,IAAAA,OAAO,EAAG;AACN,uBAAiBN;AADX;AAF+B,GAAjC,CAAZ;AAMH;AAGD,OAAO,UAAUO,UAAV,GAAwB;AAC3B,QAAM;AAACC,IAAAA,IAAI,EAAE;AAACA,MAAAA,IAAI,EAAG;AAACC,QAAAA;AAAD;AAAR;AAAP,MAA6B,MAAMjB,IAAI,CAACO,oBAAD,CAA7C,CAD2B,CAE5B;AACC;AACH;AAED,OAAO,UAAUW,iBAAV,GAA+B;AAClC,QAAMnB,UAAU,CAACM,oBAAoB,CAACc,iBAAtB,EAAwCJ,UAAxC,CAAhB;AACH;AAED,OAAO,UAAUK,YAAV,GAA0B;AAC7B,QAAMlB,GAAG,CAAC,CAACF,IAAI,CAACkB,iBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest , call , put , all } from 'redux-saga/effects';\nimport axios from 'axios';\nimport moment from 'moment';\nimport BOOKING_ACTION_TYPES from './booking-types';\nimport { getBookingSuccess } from './booking-action';\n\n\n// function handleData (arr) {\n//     var fixedData = [];\n//     var temp = {}\n   \n//     for(let i = 0 ; i < arr.length; i ++) {\n//       temp.createAt = moment(arr[i].createAt).format('MMMM Do YYYY')\n//       temp._id = arr[i]._id;\n//       temp.address = arr[i].address;\n//       temp.phoneNumber = arr[i].idUser.phoneNumber\n//       temp.key = new Date().getMilliseconds() * Math.random();\n//       for(let j = 0 ; j < arr[i].cart.length; j++) {\n        \n//         temp.idProduct = arr[i].cart[j]._id.idProduct;\n//         temp.nameEN = arr[i].cart[j]._id.nameEN;\n//         temp.nameVN = arr[i].cart[j]._id.nameVN;\n//         temp.weight = arr[i].cart[j]._id.weight;\n//         temp.totalWeight =arr[i].cart[j]._id.totalWeight;\n//         temp.quantity = arr[i].cart[j].quantity;\n//         fixedData.push(temp);\n//       }\n//     }\n//     return fixedData;\n//   }\n  \n\nexport function fetchBookingToServer() {\n    let token = \"Bearer \" + JSON.parse(localStorage.getItem(\"login\"));\n    return axios(`http://localhost:2222/booking`,{\n        method: \"get\",\n        headers : {\n            'Authorization': token\n        }, \n    })\n}\n\n\nexport function* getBooking () {\n    const {data :{data : {booking}}} = yield call(fetchBookingToServer);\n   // let data = handleData(booking)\n    //yield put(getBookingSuccess(data));\n}\n\nexport function* onGetBookingStart () {\n    yield takeLatest(BOOKING_ACTION_TYPES.GET_BOOKING_START,getBooking)\n}\n\nexport function* bookingSagas () {\n    yield all([call(onGetBookingStart)])\n}"]},"metadata":{},"sourceType":"module"}