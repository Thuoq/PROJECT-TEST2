{"ast":null,"code":"var _jsxFileName = \"/Users/thuongle/Desktop/e-ecommerce/client/src/components/sign-up/sign-up.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Input, Tooltip, Button } from 'antd';\nimport axios from 'axios';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { formItemLayout, tailFormItemLayout } from './prefixLayout';\nimport { setCurrentUser } from '../../redux/user/user.action';\n\nconst SignUp = ({\n  setCurrentUser\n}) => {\n  const onFinish = values => {\n    axios.post(\"http://localhost:2222/user/register\", values).then(res => {\n      const {\n        user\n      } = res.data.data;\n      setCurrentUser(user);\n      localStorage.setItem(\"login\", res.data.token);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Form, Object.assign({}, formItemLayout, {\n    name: \"register\",\n    onFinish: onFinish,\n    scrollToFirstError: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"email\",\n    label: \"E-mail\",\n    rules: [{\n      type: 'email',\n      message: 'The input is not valid E-mail!'\n    }, {\n      required: true,\n      message: 'Please input your E-mail!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"password\",\n    label: \"Password\",\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }],\n    hasFeedback: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"confirmPassword\",\n    label: \"Confirm Password\",\n    dependencies: ['password'],\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please confirm your password!'\n    }, ({\n      getFieldValue\n    }) => ({\n      validator(rule, value) {\n        if (!value || getFieldValue('password') === value) {\n          return Promise.resolve();\n        }\n\n        return Promise.reject('The two passwords that you entered do not match!');\n      }\n\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"name\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, \"Nickname\\xA0\", /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"What do you want others to call you?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(QuestionCircleOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }))),\n    rules: [{\n      required: true,\n      message: 'Please input your nickname!',\n      whitespace: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"address\",\n    label: \"Address\",\n    rules: [{\n      required: true,\n      message: 'Please provide your Address !'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"phoneNumber\",\n    label: \"Phone Number\",\n    rules: [{\n      required: true,\n      message: 'Please input your phone number!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, \"Register\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/thuongle/Desktop/e-ecommerce/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","connect","Form","Input","Tooltip","Button","axios","QuestionCircleOutlined","formItemLayout","tailFormItemLayout","setCurrentUser","SignUp","onFinish","values","post","then","res","user","data","localStorage","setItem","token","type","message","required","getFieldValue","validator","rule","value","Promise","resolve","reject","whitespace","width","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Form, Input, Tooltip, Button,\n} from 'antd';\nimport axios from 'axios';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { formItemLayout, tailFormItemLayout } from './prefixLayout';\nimport { setCurrentUser } from '../../redux/user/user.action';\n\nconst SignUp = ({setCurrentUser}) => {\n  const onFinish = values => {\n    axios.post(\"http://localhost:2222/user/register\",values).then(res => {\n      const {user} = res.data.data;\n      setCurrentUser(user);\n      localStorage.setItem(\"login\",res.data.token)\n    })\n  }\n  return(\n    <Form\n    {...formItemLayout}\n    name=\"register\"\n    onFinish={onFinish}\n    scrollToFirstError\n  >\n    <Form.Item\n      name=\"email\"\n      label=\"E-mail\"\n      rules={[\n        {\n          type: 'email',\n          message: 'The input is not valid E-mail!',\n        },\n        {\n          required: true,\n          message: 'Please input your E-mail!',\n        },\n      ]}\n    >\n      <Input />\n    </Form.Item>\n\n    <Form.Item\n      name=\"password\"\n      label=\"Password\"\n      rules={[\n        {\n          required: true,\n          message: 'Please input your password!',\n        },\n      ]}\n      hasFeedback\n    >\n      <Input.Password />\n    </Form.Item>\n\n    <Form.Item\n      name=\"confirmPassword\"\n      label=\"Confirm Password\"\n      dependencies={['password']}\n      hasFeedback\n      rules={[\n        {\n          required: true,\n          message: 'Please confirm your password!',\n        },\n        ({ getFieldValue }) => ({\n          validator(rule, value) {\n            if (!value || getFieldValue('password') === value) {\n              return Promise.resolve();\n            }\n\n            return Promise.reject(\n              'The two passwords that you entered do not match!',\n            );\n          },\n        }),\n      ]}\n    >\n      <Input.Password />\n    </Form.Item>\n\n    <Form.Item\n      name=\"name\"\n      label={(\n        <span>\n          Nickname&nbsp;\n          <Tooltip title=\"What do you want others to call you?\">\n            <QuestionCircleOutlined />\n          </Tooltip>\n        </span>\n      )}\n      rules={[\n        {\n          required: true,\n          message: 'Please input your nickname!',\n          whitespace: true,\n        },\n      ]}\n    >\n      <Input />\n    </Form.Item>\n\n    <Form.Item\n      name=\"address\"\n      label=\"Address\"\n      rules={[\n        {\n          required: true,\n          message: 'Please provide your Address !',\n        },\n      ]}\n    >\n      <Input />\n    </Form.Item>\n\n    <Form.Item\n      name=\"phoneNumber\"\n      label=\"Phone Number\"\n      rules={[\n        {\n          required: true,\n          message: 'Please input your phone number!',\n        },\n      ]}\n    >\n      <Input\n        style={{\n          width: '100%',\n        }}\n      />\n    </Form.Item>\n\n    <Form.Item {...tailFormItemLayout}>\n      <Button type=\"primary\" htmlType=\"submit\">\n        Register\n      </Button>\n    </Form.Item>\n  </Form>\n  )\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser : user => dispatch(setCurrentUser(user))\n})\n\nexport default connect(null,mapDispatchToProps)(SignUp) ;\n"]},"metadata":{},"sourceType":"module"}