{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport shortid from 'shortid';\nimport axios from 'axios';\nimport moment from 'moment';\nimport BOOKING_ACTION_TYPES from './booking-types';\nimport { getBookingSuccess } from './booking-action'; // HANDLE BOOKING\n\nfunction handleData(arr) {\n  var fixedData = [];\n  var temp = {};\n\n  for (let i = 0; i < arr.length; i++) {\n    temp.createAt = moment(arr[i].createAt).format('MMMM Do YYYY');\n    temp._id = arr[i]._id;\n    temp.address = arr[i].address;\n    temp.phoneNumber = arr[i].idUser.phoneNumber;\n    temp.key = new Date().getTime();\n\n    for (let j = 0; j < arr[i].cart.length; j++) {\n      temp.idProduct = arr[i].cart[j]._id.idProduct;\n      temp.nameEN = arr[i].cart[j]._id.nameEN;\n      temp.nameVN = arr[i].cart[j]._id.nameVN;\n      temp.weight = arr[i].cart[j]._id.weight;\n      temp.totalWeight = arr[i].cart[j]._id.totalWeight;\n      temp.quantity = arr[i].cart[j].quantity;\n      fixedData.push(temp);\n    }\n  }\n\n  return fixedData;\n}\n\nexport function fetchBookingToServer() {\n  let token = \"Bearer \" + JSON.parse(localStorage.getItem(\"login\"));\n  return axios(`http://localhost:2222/booking`, {\n    method: \"get\",\n    headers: {\n      'Authorization': token\n    }\n  });\n}\nexport function* getBooking() {\n  const {\n    data: {\n      data: {\n        booking\n      }\n    }\n  } = yield call(fetchBookingToServer);\n  let data = handleData(booking);\n  yield put(getBookingSuccess(data));\n}\nexport function* onGetBookingStart() {\n  yield takeLatest(BOOKING_ACTION_TYPES.GET_BOOKING_START, getBooking);\n}\nexport function* bookingSagas() {\n  yield all([call(onGetBookingStart)]);\n}","map":{"version":3,"sources":["/Users/thuongle/Desktop/e-ecommerce/client/src/redux/booking/booking-sagas.js"],"names":["takeLatest","call","put","all","shortid","axios","moment","BOOKING_ACTION_TYPES","getBookingSuccess","handleData","arr","fixedData","temp","i","length","createAt","format","_id","address","phoneNumber","idUser","key","Date","getTime","j","cart","idProduct","nameEN","nameVN","weight","totalWeight","quantity","push","fetchBookingToServer","token","JSON","parse","localStorage","getItem","method","headers","getBooking","data","booking","onGetBookingStart","GET_BOOKING_START","bookingSagas"],"mappings":"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","sourcesContent":["import {takeLatest , call , put , all } from 'redux-saga/effects';\nimport shortid from 'shortid';\nimport axios from 'axios';\nimport moment from 'moment';\nimport BOOKING_ACTION_TYPES from './booking-types';\nimport { getBookingSuccess } from './booking-action';\n\n// HANDLE BOOKING\nfunction handleData (arr) {\n    var fixedData = [];\n    var temp = {}\n    for(let i = 0 ; i < arr.length; i ++) {\n      temp.createAt = moment(arr[i].createAt).format('MMMM Do YYYY')\n      temp._id = arr[i]._id;\n      temp.address = arr[i].address;\n      temp.phoneNumber = arr[i].idUser.phoneNumber\n      temp.key =   new Date().getTime() ;\n      for(let j = 0 ; j < arr[i].cart.length; j++) {\n        \n        temp.idProduct = arr[i].cart[j]._id.idProduct;\n        temp.nameEN = arr[i].cart[j]._id.nameEN;\n        temp.nameVN = arr[i].cart[j]._id.nameVN;\n        temp.weight = arr[i].cart[j]._id.weight;\n        temp.totalWeight =arr[i].cart[j]._id.totalWeight;\n        temp.quantity = arr[i].cart[j].quantity;\n        fixedData.push(temp);\n      }\n    }\n    return fixedData;\n  }\n  \n\nexport function fetchBookingToServer() {\n    let token = \"Bearer \" + JSON.parse(localStorage.getItem(\"login\"));\n    return axios(`http://localhost:2222/booking`,{\n        method: \"get\",\n        headers : {\n            'Authorization': token\n        }, \n    })\n}\n\n\nexport function* getBooking () {\n    const {data :{data : {booking}}} = yield call(fetchBookingToServer);\n    let data = handleData(booking)\n    yield put(getBookingSuccess(data));\n}\n\nexport function* onGetBookingStart () {\n    yield takeLatest(BOOKING_ACTION_TYPES.GET_BOOKING_START,getBooking)\n}\n\nexport function* bookingSagas () {\n    yield all([call(onGetBookingStart)])\n}"]},"metadata":{},"sourceType":"module"}