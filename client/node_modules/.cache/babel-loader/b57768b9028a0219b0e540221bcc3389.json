{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport axios from 'axios';\nimport moment from 'moment';\nimport BOOKING_ACTION_TYPES from './booking-types';\nimport { getBookingSuccess } from './booking-action';\n\nfunction handleData(arr) {\n  var fixedData = [];\n  var temp = {};\n\n  for (var i = 0; i < arr.length; i++) {\n    temp._id = arr[i]._id;\n    temp.address = arr[i].address;\n    temp.phoneNumber = arr[i].idUser.phoneNumber; // arr[i].cart.forEach(el => {\n    //   console.log\n    //   temp.idProduct = el._id.idProduct;\n    //   temp.nameEN = el._id.nameEN\n    //   temp.key = el.key;\n    //   fixedData.push(temp)\n    //   console.log(fixedData)\n    // })\n\n    for (var j = 0; j < arr[i].cart.length; j++) {\n      temp.idProduct = arr[i].cart[j]._id.idProduct;\n      temp.nameEN = arr[i].cart[j]._id.nameEN;\n      temp.nameVN = arr[i].cart[j]._id.nameVN;\n      temp.weight = arr[i].cart[j]._id.weight;\n      temp.totalWeight = arr[i].cart[j]._id.totalWeight;\n      temp.quantity = arr[i].cart[j].quantity;\n      temp.key = arr[i].cart[j].key;\n      var mark = { ...temp\n      };\n      fixedData.push(mark);\n    }\n  }\n\n  return fixedData;\n}\n\nexport function fetchBookingToServer() {\n  let token = \"Bearer \" + JSON.parse(localStorage.getItem(\"login\"));\n  return axios(`http://localhost:2222/booking`, {\n    method: \"get\",\n    headers: {\n      'Authorization': token\n    }\n  });\n}\nexport function* getBooking() {\n  const {\n    data: {\n      data: {\n        booking\n      }\n    }\n  } = yield call(fetchBookingToServer);\n  let data = yield call(handleData, booking);\n  yield put(getBookingSuccess(data));\n}\nexport function* onGetBookingStart() {\n  yield takeLatest(BOOKING_ACTION_TYPES.GET_BOOKING_START, getBooking);\n}\nexport function* bookingSagas() {\n  yield all([call(onGetBookingStart)]);\n}","map":{"version":3,"sources":["/Users/thuongle/Desktop/e-ecommerce/client/src/redux/booking/booking-sagas.js"],"names":["takeLatest","call","put","all","axios","moment","BOOKING_ACTION_TYPES","getBookingSuccess","handleData","arr","fixedData","temp","i","length","_id","address","phoneNumber","idUser","j","cart","idProduct","nameEN","nameVN","weight","totalWeight","quantity","key","mark","push","fetchBookingToServer","token","JSON","parse","localStorage","getItem","method","headers","getBooking","data","booking","onGetBookingStart","GET_BOOKING_START","bookingSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAqBC,IAArB,EAA4BC,GAA5B,EAAkCC,GAAlC,QAA6C,oBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,oBAAP,MAAiC,iBAAjC;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AAGA,SAASC,UAAT,CAAqBC,GAArB,EAA0B;AACtB,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,IAAI,GAAG,EAAX;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAGH,GAAG,CAACI,MAAxB,EAAgCD,CAAC,EAAjC,EAAsC;AACpCD,IAAAA,IAAI,CAACG,GAAL,GAAWL,GAAG,CAACG,CAAD,CAAH,CAAOE,GAAlB;AACAH,IAAAA,IAAI,CAACI,OAAL,GAAeN,GAAG,CAACG,CAAD,CAAH,CAAOG,OAAtB;AACAJ,IAAAA,IAAI,CAACK,WAAL,GAAmBP,GAAG,CAACG,CAAD,CAAH,CAAOK,MAAP,CAAcD,WAAjC,CAHoC,CAIpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAAI,IAAIE,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAGT,GAAG,CAACG,CAAD,CAAH,CAAOO,IAAP,CAAYN,MAAhC,EAAwCK,CAAC,EAAzC,EAA6C;AAC3CP,MAAAA,IAAI,CAACS,SAAL,GAAiBX,GAAG,CAACG,CAAD,CAAH,CAAOO,IAAP,CAAYD,CAAZ,EAAeJ,GAAf,CAAmBM,SAApC;AACAT,MAAAA,IAAI,CAACU,MAAL,GAAcZ,GAAG,CAACG,CAAD,CAAH,CAAOO,IAAP,CAAYD,CAAZ,EAAeJ,GAAf,CAAmBO,MAAjC;AACAV,MAAAA,IAAI,CAACW,MAAL,GAAcb,GAAG,CAACG,CAAD,CAAH,CAAOO,IAAP,CAAYD,CAAZ,EAAeJ,GAAf,CAAmBQ,MAAjC;AACAX,MAAAA,IAAI,CAACY,MAAL,GAAcd,GAAG,CAACG,CAAD,CAAH,CAAOO,IAAP,CAAYD,CAAZ,EAAeJ,GAAf,CAAmBS,MAAjC;AACAZ,MAAAA,IAAI,CAACa,WAAL,GAAmBf,GAAG,CAACG,CAAD,CAAH,CAAOO,IAAP,CAAYD,CAAZ,EAAeJ,GAAf,CAAmBU,WAAtC;AACAb,MAAAA,IAAI,CAACc,QAAL,GAAgBhB,GAAG,CAACG,CAAD,CAAH,CAAOO,IAAP,CAAYD,CAAZ,EAAeO,QAA/B;AACAd,MAAAA,IAAI,CAACe,GAAL,GAAWjB,GAAG,CAACG,CAAD,CAAH,CAAOO,IAAP,CAAYD,CAAZ,EAAeQ,GAA1B;AACA,UAAIC,IAAI,GAAG,EAAC,GAAGhB;AAAJ,OAAX;AACAD,MAAAA,SAAS,CAACkB,IAAV,CAAeD,IAAf;AAED;AACF;;AACD,SAAOjB,SAAP;AACH;;AAGD,OAAO,SAASmB,oBAAT,GAAgC;AACnC,MAAIC,KAAK,GAAG,YAAYC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAxB;AACA,SAAO9B,KAAK,CAAE,+BAAF,EAAiC;AACzC+B,IAAAA,MAAM,EAAE,KADiC;AAEzCC,IAAAA,OAAO,EAAG;AACN,uBAAiBN;AADX;AAF+B,GAAjC,CAAZ;AAMH;AAGD,OAAO,UAAUO,UAAV,GAAwB;AAC3B,QAAM;AAACC,IAAAA,IAAI,EAAE;AAACA,MAAAA,IAAI,EAAG;AAACC,QAAAA;AAAD;AAAR;AAAP,MAA6B,MAAMtC,IAAI,CAAC4B,oBAAD,CAA7C;AACA,MAAIS,IAAI,GAAG,MAAMrC,IAAI,CAACO,UAAD,EAAY+B,OAAZ,CAArB;AACA,QAAMrC,GAAG,CAACK,iBAAiB,CAAC+B,IAAD,CAAlB,CAAT;AACH;AAED,OAAO,UAAUE,iBAAV,GAA+B;AAClC,QAAMxC,UAAU,CAACM,oBAAoB,CAACmC,iBAAtB,EAAwCJ,UAAxC,CAAhB;AACH;AAED,OAAO,UAAUK,YAAV,GAA0B;AAC7B,QAAMvC,GAAG,CAAC,CAACF,IAAI,CAACuC,iBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest , call , put , all } from 'redux-saga/effects';\nimport axios from 'axios';\nimport moment from 'moment';\nimport BOOKING_ACTION_TYPES from './booking-types';\nimport { getBookingSuccess } from './booking-action';\n\n\nfunction handleData (arr) {\n    var fixedData = [];\n    var temp = {}\n    for(var i = 0 ; i < arr.length; i ++) {\n      temp._id = arr[i]._id;\n      temp.address = arr[i].address;\n      temp.phoneNumber = arr[i].idUser.phoneNumber;\n      // arr[i].cart.forEach(el => {\n      //   console.log\n      //   temp.idProduct = el._id.idProduct;\n      //   temp.nameEN = el._id.nameEN\n      //   temp.key = el.key;\n      //   fixedData.push(temp)\n      //   console.log(fixedData)\n      // })\n      \n    \n      for(var j = 0 ; j < arr[i].cart.length; j++) {\n        temp.idProduct = arr[i].cart[j]._id.idProduct;\n        temp.nameEN = arr[i].cart[j]._id.nameEN;\n        temp.nameVN = arr[i].cart[j]._id.nameVN;\n        temp.weight = arr[i].cart[j]._id.weight;\n        temp.totalWeight = arr[i].cart[j]._id.totalWeight;\n        temp.quantity = arr[i].cart[j].quantity;\n        temp.key = arr[i].cart[j].key;\n        var mark = {...temp}\n        fixedData.push(mark);\n       \n      }\n    }\n    return fixedData;\n}\n  \n\nexport function fetchBookingToServer() {\n    let token = \"Bearer \" + JSON.parse(localStorage.getItem(\"login\"));\n    return axios(`http://localhost:2222/booking`,{\n        method: \"get\",\n        headers : {\n            'Authorization': token\n        }, \n    })\n}\n\n\nexport function* getBooking () {\n    const {data :{data : {booking}}} = yield call(fetchBookingToServer);\n    let data = yield call(handleData,booking);\n    yield put(getBookingSuccess(data));\n}\n\nexport function* onGetBookingStart () {\n    yield takeLatest(BOOKING_ACTION_TYPES.GET_BOOKING_START,getBooking)\n}\n\nexport function* bookingSagas () {\n    yield all([call(onGetBookingStart)])\n}"]},"metadata":{},"sourceType":"module"}