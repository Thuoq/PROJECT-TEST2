{"ast":null,"code":"var _jsxFileName = \"/Users/thuongle/Desktop/e-ecommerce/client/src/pages/checkout-page/pay-checkout/model-checkout.component.jsx\";\nimport React, { useState } from 'react';\nimport { Modal, Form, Input, Button, Radio, Table } from 'antd';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { selectHiddenModelCheckOut } from '../../../redux/cart/cart.selector';\nimport { columns } from './model-checkout-prefix-layout';\nimport { toggleCheckoutHidden } from '../../../redux/cart/cart.action';\nimport { selectCurrentUser } from '../../../redux/user/user.selector';\nconst rowSelection = {\n  onChange: (selectedRowKeys, selectedRows) => {\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, \"selectedRows: \", selectedRows);\n  }\n};\n\nconst ModelCheckout = ({\n  hiddenModelCheckOut,\n  toggleCheckoutHidden,\n  currentUser,\n  ...props\n}) => {\n  const [visiable, setVisible] = useState(false);\n\n  const onFinish = values => {\n    console.log(\"Received values of form:\", values);\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    width: 650,\n    title: \"Please Choose Address\",\n    visible: hiddenModelCheckOut,\n    footer: null,\n    onCancel: () => toggleCheckoutHidden(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    rowSelection: {\n      type: \"radio\",\n      ...rowSelection\n    },\n    columns: columns,\n    dataSource: currentUser.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setVisible(!visiable),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Add New Adress\"), /*#__PURE__*/React.createElement(Modal, {\n    title: \"Add Your New Address\",\n    visible: visiable,\n    footer: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: \"60%\"\n    },\n    placeholder: \"Type Your Detail Address ...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \" \", \"Add New Adress\", \" \"))));\n};\n\nconst mapStateProps = createStructuredSelector({\n  hiddenModelCheckOut: selectHiddenModelCheckOut,\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCheckoutHidden: () => dispatch(toggleCheckoutHidden())\n});\n\nexport default connect(mapStateProps, mapDispatchToProps)(ModelCheckout);","map":{"version":3,"sources":["/Users/thuongle/Desktop/e-ecommerce/client/src/pages/checkout-page/pay-checkout/model-checkout.component.jsx"],"names":["React","useState","Modal","Form","Input","Button","Radio","Table","createStructuredSelector","connect","selectHiddenModelCheckOut","columns","toggleCheckoutHidden","selectCurrentUser","rowSelection","onChange","selectedRowKeys","selectedRows","console","log","ModelCheckout","hiddenModelCheckOut","currentUser","props","visiable","setVisible","onFinish","values","type","address","width","mapStateProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React , {useState} from 'react';\n\nimport { Modal ,Form, Input, Button, Radio , Table } from 'antd';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { selectHiddenModelCheckOut } from '../../../redux/cart/cart.selector';\nimport {columns} from './model-checkout-prefix-layout';\nimport { toggleCheckoutHidden } from '../../../redux/cart/cart.action';\nimport { selectCurrentUser } from '../../../redux/user/user.selector';\n\nconst rowSelection = {\n  onChange: (selectedRowKeys, selectedRows) => {\n    console.log(\n      `selectedRowKeys: ${selectedRowKeys}`,\n      \"selectedRows: \",\n      selectedRows\n    );\n  }\n};\n\nconst ModelCheckout = ({hiddenModelCheckOut,toggleCheckoutHidden,currentUser,...props}) => {\n  const [visiable, setVisible] = useState(false);\n  const onFinish = (values) => {\n    console.log(\"Received values of form:\", values);\n  };\n  return (\n  <Modal\n    width={650}\n    title=\"Please Choose Address\"\n    visible={hiddenModelCheckOut}\n    footer={null}\n    onCancel={() => toggleCheckoutHidden()}\n  >\n    <Table\n        rowSelection={{\n          type: \"radio\",\n          ...rowSelection\n        }}\n        columns={columns}\n        dataSource = {currentUser.address}\n      />\n      <Button onClick={() => setVisible(!visiable)}>Add New Adress</Button>\n      <Modal title=\"Add Your New Address\" visible={visiable} footer={null}>\n        <Form onFinish = {onFinish} >\n          <Form.Item name=\"address\">\n              <Input style={{ width: \"60%\" }} placeholder=\"Type Your Detail Address ...\" />\n          </Form.Item>\n          <br />\n          <Button type=\"primary\" htmlType=\"submit\">\n            {\" \"}\n            Add New Adress{\" \"}\n          </Button>\n        </Form>\n      </Modal>\n  </Modal>\n)};\n\nconst mapStateProps = createStructuredSelector({\n  hiddenModelCheckOut: selectHiddenModelCheckOut,\n  currentUser : selectCurrentUser\n});\nconst mapDispatchToProps = dispatch => ({\n  toggleCheckoutHidden : () => dispatch(toggleCheckoutHidden())\n})\n\nexport default connect(mapStateProps,mapDispatchToProps)(ModelCheckout);\n"]},"metadata":{},"sourceType":"module"}