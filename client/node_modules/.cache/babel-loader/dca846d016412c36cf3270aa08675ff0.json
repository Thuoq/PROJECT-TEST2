{"ast":null,"code":"var _jsxFileName = \"/Users/thuongle/Desktop/e-ecommerce/client/src/components/information-user/addAddress-user.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCurrentUser } from '../../redux/user/user.selector';\n\nconst AddAddressUser = ({\n  currentUser\n}) => /*#__PURE__*/React.createElement(Form, {\n  layout: \"horizontal\",\n  style: {\n    flex: ' 0 0 50%'\n  },\n  initialValues: {\n    address: [...currentUser.address]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Form.Item, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Form.List, {\n  name: \"address\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }\n}, (fields, {\n  add,\n  remove\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, fields.map((field, index) => /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, index === 0 ? formItemLayout : formItemLayoutWithOutLabel, {\n    label: `Address ${index + 1}`,\n    required: false,\n    key: field.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, field, {\n    validateTrigger: [\"onChange\", \"onBlur\"],\n    rules: [{\n      required: true,\n      whitespace: true,\n      message: \"Please input Add Address or Delete this Address.\"\n    }],\n    noStyle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Address details\",\n    style: {\n      width: \"60%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  })), fields.length >= 1 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Radio, {\n    style: {\n      marginLeft: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }\n  }, \"Choose Address\"), /*#__PURE__*/React.createElement(MinusCircleOutlined, {\n    onClick: () => {\n      remove(field.name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 23\n    }\n  })) : null)), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"dashed\",\n    onClick: () => {\n      add();\n    },\n    style: {\n      width: \"60%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PlusOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  }), \" Add Address\")));\n})));\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\nexport default connect(mapStateToProps)(AddAddressUser);","map":{"version":3,"sources":["/Users/thuongle/Desktop/e-ecommerce/client/src/components/information-user/addAddress-user.component.jsx"],"names":["React","connect","Form","Input","Button","MinusCircleOutlined","PlusOutlined","createStructuredSelector","selectCurrentUser","AddAddressUser","currentUser","flex","address","fields","add","remove","map","field","index","formItemLayout","formItemLayoutWithOutLabel","key","required","whitespace","message","width","length","marginLeft","name","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {\n  Form, Input, Button,\n} from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCurrentUser } from '../../redux/user/user.selector';\n\nconst AddAddressUser = ({currentUser}) => (\n  <Form \n  layout=\"horizontal\" \n  style={{ flex: ' 0 0 50%' }} initialValues = {{address: [...currentUser.address]}}>\n    <Form.Item>\n      <Form.List name=\"address\">\n      {(fields, { add, remove }) => {\n          return (\n            <div>\n              {fields.map((field, index) => (\n                <Form.Item\n                  {...(index === 0\n                    ? formItemLayout\n                    : formItemLayoutWithOutLabel)}\n                  label={ `Address ${index + 1}` }\n                  required={false}\n                  key={field.key}\n                >\n                  <Form.Item\n                    {...field}\n                    validateTrigger={[\"onChange\", \"onBlur\"]}\n                    rules={[\n                      {\n                        required: true,\n                        whitespace: true,\n                        message:\n                          \"Please input Add Address or Delete this Address.\"\n                      }\n                    ]}\n                    noStyle\n                  >\n                    <Input\n                      placeholder=\"Address details\"\n                      style={{ width: \"60%\" }}\n                    />\n                  </Form.Item>\n                  {fields.length >= 1 ? (\n                    <>\n                      <Radio style={{ marginLeft: \"8px\" }}>\n                        Choose Address\n                      </Radio>\n                      <MinusCircleOutlined\n                        onClick={() => {\n                          remove(field.name);\n                        }}\n                      />\n                    </>\n                  ) : null}\n                </Form.Item>\n              ))}\n              <Form.Item>\n                <Button\n                  type=\"dashed\"\n                  onClick={() => {\n                    add();\n                  }}\n                  style={{ width: \"60%\" }}\n                >\n                  <PlusOutlined /> Add Address\n                </Button>\n              </Form.Item>\n            </div>\n          );\n        }}\n      </Form.List>\n    </Form.Item>\n  </Form>\n);\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser : selectCurrentUser\n})\n\nexport default connect(mapStateToProps)(AddAddressUser) ;\n"]},"metadata":{},"sourceType":"module"}