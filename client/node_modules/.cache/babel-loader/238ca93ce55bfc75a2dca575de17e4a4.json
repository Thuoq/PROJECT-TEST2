{"ast":null,"code":"import { takeLatest, call, put, all, select } from 'redux-saga/effects';\nimport axios from 'axios';\nimport BOOKING_ACTION_TYPES from './booking-types';\nimport { getBookingSuccess } from './booking-action';\nexport function fetchBookingToServer() {\n  let token = \"Bearer \" + JSON.parse(localStorage.getItem(\"login\"));\n  return axios(`http://localhost:2222/booking`, {\n    method: \"get\",\n    headers: {\n      'Authorization': token\n    }\n  });\n}\nexport function* getBooking() {\n  const {\n    data: {\n      booking\n    }\n  } = yield call(fetchBookingToServer);\n  put(getBookingSuccess(booking));\n}\nexport function* onGetBookingStart() {\n  takeLatest(BOOKING_ACTION_TYPES.GET_BOOKING_START, getBooking);\n}\nexport function* bookingSagas() {\n  yield all([call(onGetBookingStart)]);\n}","map":{"version":3,"sources":["/Users/thuongle/Desktop/e-ecommerce/client/src/redux/booking/booking-sagas.js"],"names":["takeLatest","call","put","all","select","axios","BOOKING_ACTION_TYPES","getBookingSuccess","fetchBookingToServer","token","JSON","parse","localStorage","getItem","method","headers","getBooking","data","booking","onGetBookingStart","GET_BOOKING_START","bookingSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAqBC,IAArB,EAA4BC,GAA5B,EAAkCC,GAAlC,EAAuCC,MAAvC,QAAoD,oBAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,oBAAP,MAAiC,iBAAjC;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AAGA,OAAO,SAASC,oBAAT,GAAgC;AACnC,MAAIC,KAAK,GAAG,YAAYC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAxB;AACA,SAAOR,KAAK,CAAE,+BAAF,EAAiC;AACzCS,IAAAA,MAAM,EAAE,KADiC;AAEzCC,IAAAA,OAAO,EAAG;AACN,uBAAiBN;AADX;AAF+B,GAAjC,CAAZ;AAMH;AAGD,OAAO,UAAUO,UAAV,GAAwB;AAC3B,QAAM;AAACC,IAAAA,IAAI,EAAE;AAACC,MAAAA;AAAD;AAAP,MAAoB,MAAMjB,IAAI,CAACO,oBAAD,CAApC;AACAN,EAAAA,GAAG,CAACK,iBAAiB,CAACW,OAAD,CAAlB,CAAH;AACH;AAED,OAAO,UAAUC,iBAAV,GAA+B;AAClCnB,EAAAA,UAAU,CAACM,oBAAoB,CAACc,iBAAtB,EAAwCJ,UAAxC,CAAV;AACH;AAED,OAAO,UAAUK,YAAV,GAA0B;AAC7B,QAAMlB,GAAG,CAAC,CAACF,IAAI,CAACkB,iBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest , call , put , all ,select} from 'redux-saga/effects';\nimport axios from 'axios';\nimport BOOKING_ACTION_TYPES from './booking-types';\nimport { getBookingSuccess } from './booking-action';\n\n\nexport function fetchBookingToServer() {\n    let token = \"Bearer \" + JSON.parse(localStorage.getItem(\"login\"));\n    return axios(`http://localhost:2222/booking`,{\n        method: \"get\",\n        headers : {\n            'Authorization': token\n        }, \n    })\n}\n\n\nexport function* getBooking () {\n    const {data :{booking}} = yield call(fetchBookingToServer);\n    put(getBookingSuccess(booking));\n}\n\nexport function* onGetBookingStart () {\n    takeLatest(BOOKING_ACTION_TYPES.GET_BOOKING_START,getBooking)\n}\n\nexport function* bookingSagas () {\n    yield all([call(onGetBookingStart)])\n}"]},"metadata":{},"sourceType":"module"}