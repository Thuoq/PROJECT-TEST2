{"ast":null,"code":"import { takeLatest, all, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport USER_ACTIONS_TYPES from '../user/user.types';\nimport { setCurrentUser, signOutSuccess } from '../user/user.action';\nexport function fetchUserToServer(data, type) {\n  return axios(`http://localhost:2222/user/${type}`, {\n    method: \"post\",\n    data: data\n  });\n}\nexport function fetchBookingToServer(data) {\n  let token = \"Bear \" + JSON.parse(localStorage.getItem(\"login\"));\n  return axios(`http://localhost:2222/booking`, {\n    method: \"POST\",\n    headers: {\n      'Authorization': token\n    }\n  });\n}\nexport function* createBooking(data) {\n  yield console.log(data);\n}\nexport function* signUp({\n  payload\n}) {\n  const {\n    data: {\n      data: {\n        user\n      }\n    }\n  } = yield call(fetchUserToServer, payload, \"register\");\n  yield put(setCurrentUser(user));\n}\nexport function* signIn({\n  payload\n}) {\n  const {\n    data: {\n      data: {\n        user\n      }\n    }\n  } = yield call(fetchUserToServer, payload, \"signIn\");\n  yield console.log(\"RUNNN\");\n  yield put(setCurrentUser(user));\n}\nexport function* signOut() {\n  localStorage.removeItem(\"login\");\n  yield put(signOutSuccess());\n}\nexport function* onSignOutStart() {\n  yield takeLatest(USER_ACTIONS_TYPES.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(USER_ACTIONS_TYPES.SIGN_UP_START, signUp);\n}\nexport function* onSignInStart() {\n  yield takeLatest(USER_ACTIONS_TYPES.SIGN_IN_START, signIn);\n}\nexport function* onCreateBookingStart() {\n  yield takeLatest(USER_ACTIONS_TYPES.CREATE_BOOKING_START, createBooking);\n}\nexport function* userSagas() {\n  yield all([call(onSignUpStart), call(onSignInStart), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/Users/thuongle/Desktop/e-ecommerce/client/src/redux/user/user.sagas.js"],"names":["takeLatest","all","call","put","axios","USER_ACTIONS_TYPES","setCurrentUser","signOutSuccess","fetchUserToServer","data","type","method","fetchBookingToServer","token","JSON","parse","localStorage","getItem","headers","createBooking","console","log","signUp","payload","user","signIn","signOut","removeItem","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignInStart","SIGN_IN_START","onCreateBookingStart","CREATE_BOOKING_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,IAAzB,EAA8BC,GAA9B,QAAwC,oBAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,oBAA/B;AACA,SAAQC,cAAR,EAAuBC,cAAvB,QAA4C,qBAA5C;AAEA,OAAO,SAASC,iBAAT,CAA4BC,IAA5B,EAAiCC,IAAjC,EAAuC;AAC1C,SAAON,KAAK,CAAE,8BAA6BM,IAAK,EAApC,EAAsC;AAC9CC,IAAAA,MAAM,EAAE,MADsC;AAE9CF,IAAAA,IAAI,EAAEA;AAFwC,GAAtC,CAAZ;AAIH;AAED,OAAO,SAASG,oBAAT,CAA+BH,IAA/B,EAAqC;AACxC,MAAII,KAAK,GAAG,UAAUC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAtB;AACA,SAAOb,KAAK,CAAE,+BAAF,EAAkC;AAC1CO,IAAAA,MAAM,EAAG,MADiC;AAE1CO,IAAAA,OAAO,EAAG;AACN,uBAAiBL;AADX;AAFgC,GAAlC,CAAZ;AAOH;AAGD,OAAO,UAAUM,aAAV,CAAwBV,IAAxB,EAA8B;AACjC,QAAMW,OAAO,CAACC,GAAR,CAAYZ,IAAZ,CAAN;AAEH;AAED,OAAO,UAAWa,MAAX,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA6B;AACjC,QAAM;AAACd,IAAAA,IAAI,EAAG;AAACA,MAAAA,IAAI,EAAG;AAACe,QAAAA;AAAD;AAAR;AAAR,MAA2B,MAAMtB,IAAI,CAACM,iBAAD,EAAmBe,OAAnB,EAA2B,UAA3B,CAA3C;AACA,QAAMpB,GAAG,CAACG,cAAc,CAACkB,IAAD,CAAf,CAAT;AACF;AAED,OAAO,UAAUC,MAAV,CAAiB;AAACF,EAAAA;AAAD,CAAjB,EAA4B;AAC/B,QAAM;AAACd,IAAAA,IAAI,EAAG;AAACA,MAAAA,IAAI,EAAG;AAACe,QAAAA;AAAD;AAAR;AAAR,MAA2B,MAAMtB,IAAI,CAACM,iBAAD,EAAmBe,OAAnB,EAA4B,QAA5B,CAA3C;AACA,QAAMH,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAN;AACA,QAAMlB,GAAG,CAACG,cAAc,CAACkB,IAAD,CAAf,CAAT;AACH;AAED,OAAO,UAAUE,OAAV,GAAoB;AACvBV,EAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACA,QAAMxB,GAAG,CAACI,cAAc,EAAf,CAAT;AACH;AAED,OAAO,UAAUqB,cAAV,GAA2B;AAC9B,QAAM5B,UAAU,CAACK,kBAAkB,CAACwB,cAApB,EAAoCH,OAApC,CAAhB;AACH;AAGD,OAAO,UAAUI,aAAV,GAA0B;AAC7B,QAAM9B,UAAU,CAACK,kBAAkB,CAAC0B,aAApB,EAAkCT,MAAlC,CAAhB;AACH;AACD,OAAO,UAAUU,aAAV,GAA0B;AAC7B,QAAMhC,UAAU,CAACK,kBAAkB,CAAC4B,aAApB,EAAkCR,MAAlC,CAAhB;AACH;AAED,OAAO,UAAUS,oBAAV,GAAiC;AACpC,QAAMlC,UAAU,CAACK,kBAAkB,CAAC8B,oBAApB,EAA0ChB,aAA1C,CAAhB;AACH;AAED,OAAO,UAAUiB,SAAV,GAAsB;AACzB,QAAMnC,GAAG,CAAC,CACNC,IAAI,CAAC4B,aAAD,CADE,EAEN5B,IAAI,CAAC8B,aAAD,CAFE,EAGN9B,IAAI,CAAC0B,cAAD,CAHE,CAAD,CAAT;AAKH","sourcesContent":["import {takeLatest, all, call,put} from 'redux-saga/effects';\nimport axios from 'axios';\nimport USER_ACTIONS_TYPES from '../user/user.types';\nimport {setCurrentUser,signOutSuccess} from '../user/user.action';\n\nexport function fetchUserToServer (data,type) {\n    return axios(`http://localhost:2222/user/${type}`,{\n        method: \"post\",\n        data: data\n    })\n}\n\nexport function fetchBookingToServer (data) {\n    let token = \"Bear \" + JSON.parse(localStorage.getItem(\"login\"));\n    return axios(`http://localhost:2222/booking`, {\n        method : \"POST\",\n        headers : {\n            'Authorization': token\n        }\n\n    })\n}\n\n\nexport function* createBooking(data) {\n    yield console.log(data)\n\n}\n\nexport function * signUp({payload}) {\n   const {data : {data : {user}}} = yield call(fetchUserToServer,payload,\"register\");\n   yield put(setCurrentUser(user))\n}\n\nexport function* signIn({payload}) {\n    const {data : {data : {user}}} = yield call(fetchUserToServer,payload, \"signIn\");\n    yield console.log(\"RUNNN\")\n    yield put(setCurrentUser(user));\n}\n\nexport function* signOut() {\n    localStorage.removeItem(\"login\")\n    yield put(signOutSuccess())\n}\n\nexport function* onSignOutStart() {\n    yield takeLatest(USER_ACTIONS_TYPES.SIGN_OUT_START, signOut)\n}\n\n\nexport function* onSignUpStart() {\n    yield takeLatest(USER_ACTIONS_TYPES.SIGN_UP_START,signUp);\n}\nexport function* onSignInStart() {\n    yield takeLatest(USER_ACTIONS_TYPES.SIGN_IN_START,signIn)\n}\n\nexport function* onCreateBookingStart() {\n    yield takeLatest(USER_ACTIONS_TYPES.CREATE_BOOKING_START, createBooking)\n}\n\nexport function* userSagas() {\n    yield all([\n        call(onSignUpStart),\n        call(onSignInStart),\n        call(onSignOutStart)\n    ])\n}"]},"metadata":{},"sourceType":"module"}