{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport axios from 'axios';\nimport BOOKING_ACTION_TYPES from './booking-types';\nimport { getBookingSuccess } from './booking-action'; // HANDLE BOOKING\n\nfunction handleData(arr) {\n  var fixedData = [];\n  var temp = {};\n\n  for (let i = 0; i < arr.length; i++) {\n    temp.createAt = arr[i].createAt;\n    temp._id = arr[i]._id;\n    temp.address = arr[i].address;\n\n    for (let j = 0; j < arr[i].cart.length; j++) {\n      temp.cart = arr[i].cart[j]._id;\n      temp.quantity = arr[i].cart[j].quantity;\n      fixedData.push(temp);\n    }\n  }\n\n  return fixedData;\n}\n\nexport function fetchBookingToServer() {\n  let token = \"Bearer \" + JSON.parse(localStorage.getItem(\"login\"));\n  return axios(`http://localhost:2222/booking`, {\n    method: \"get\",\n    headers: {\n      'Authorization': token\n    }\n  });\n}\nexport function* getBooking() {\n  const data = yield call(fetchBookingToServer);\n  yield console.log(data); // let data = yield call(handleData,booking)\n  // yield put(getBookingSuccess(data));\n}\nexport function* onGetBookingStart() {\n  yield takeLatest(BOOKING_ACTION_TYPES.GET_BOOKING_START, getBooking);\n}\nexport function* bookingSagas() {\n  yield all([call(onGetBookingStart)]);\n}","map":{"version":3,"sources":["/Users/thuongle/Desktop/e-ecommerce/client/src/redux/booking/booking-sagas.js"],"names":["takeLatest","call","put","all","axios","BOOKING_ACTION_TYPES","getBookingSuccess","handleData","arr","fixedData","temp","i","length","createAt","_id","address","j","cart","quantity","push","fetchBookingToServer","token","JSON","parse","localStorage","getItem","method","headers","getBooking","data","console","log","onGetBookingStart","GET_BOOKING_START","bookingSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAqBC,IAArB,EAA4BC,GAA5B,EAAkCC,GAAlC,QAA6C,oBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,oBAAP,MAAiC,iBAAjC;AACA,SAASC,iBAAT,QAAkC,kBAAlC,C,CAEA;;AACA,SAASC,UAAT,CAAqBC,GAArB,EAA0B;AACtB,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,IAAI,GAAG,EAAX;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAGH,GAAG,CAACI,MAAxB,EAAgCD,CAAC,EAAjC,EAAsC;AACpCD,IAAAA,IAAI,CAACG,QAAL,GAAgBL,GAAG,CAACG,CAAD,CAAH,CAAOE,QAAvB;AACAH,IAAAA,IAAI,CAACI,GAAL,GAAWN,GAAG,CAACG,CAAD,CAAH,CAAOG,GAAlB;AACAJ,IAAAA,IAAI,CAACK,OAAL,GAAeP,GAAG,CAACG,CAAD,CAAH,CAAOI,OAAtB;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAGR,GAAG,CAACG,CAAD,CAAH,CAAOM,IAAP,CAAYL,MAAhC,EAAwCI,CAAC,EAAzC,EAA6C;AAC3CN,MAAAA,IAAI,CAACO,IAAL,GAAYT,GAAG,CAACG,CAAD,CAAH,CAAOM,IAAP,CAAYD,CAAZ,EAAeF,GAA3B;AACAJ,MAAAA,IAAI,CAACQ,QAAL,GAAgBV,GAAG,CAACG,CAAD,CAAH,CAAOM,IAAP,CAAYD,CAAZ,EAAeE,QAA/B;AACAT,MAAAA,SAAS,CAACU,IAAV,CAAeT,IAAf;AACD;AACF;;AACD,SAAOD,SAAP;AACD;;AAGH,OAAO,SAASW,oBAAT,GAAgC;AACnC,MAAIC,KAAK,GAAG,YAAYC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAxB;AACA,SAAOrB,KAAK,CAAE,+BAAF,EAAiC;AACzCsB,IAAAA,MAAM,EAAE,KADiC;AAEzCC,IAAAA,OAAO,EAAG;AACN,uBAAiBN;AADX;AAF+B,GAAjC,CAAZ;AAMH;AAGD,OAAO,UAAUO,UAAV,GAAwB;AAC3B,QAAMC,IAAI,GAAG,MAAM5B,IAAI,CAACmB,oBAAD,CAAvB;AACA,QAAMU,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAN,CAF2B,CAG3B;AACA;AACH;AAED,OAAO,UAAUG,iBAAV,GAA+B;AAClC,QAAMhC,UAAU,CAACK,oBAAoB,CAAC4B,iBAAtB,EAAwCL,UAAxC,CAAhB;AACH;AAED,OAAO,UAAUM,YAAV,GAA0B;AAC7B,QAAM/B,GAAG,CAAC,CAACF,IAAI,CAAC+B,iBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest , call , put , all } from 'redux-saga/effects';\nimport axios from 'axios';\nimport BOOKING_ACTION_TYPES from './booking-types';\nimport { getBookingSuccess } from './booking-action';\n\n// HANDLE BOOKING\nfunction handleData (arr) {\n    var fixedData = [];\n    var temp = {}\n    for(let i = 0 ; i < arr.length; i ++) {\n      temp.createAt = arr[i].createAt\n      temp._id = arr[i]._id;\n      temp.address = arr[i].address;\n      for(let j = 0 ; j < arr[i].cart.length; j++) {\n        temp.cart = arr[i].cart[j]._id;\n        temp.quantity = arr[i].cart[j].quantity;\n        fixedData.push(temp);\n      }\n    }\n    return fixedData;\n  }\n  \n\nexport function fetchBookingToServer() {\n    let token = \"Bearer \" + JSON.parse(localStorage.getItem(\"login\"));\n    return axios(`http://localhost:2222/booking`,{\n        method: \"get\",\n        headers : {\n            'Authorization': token\n        }, \n    })\n}\n\n\nexport function* getBooking () {\n    const data = yield call(fetchBookingToServer);\n    yield console.log(data)\n    // let data = yield call(handleData,booking)\n    // yield put(getBookingSuccess(data));\n}\n\nexport function* onGetBookingStart () {\n    yield takeLatest(BOOKING_ACTION_TYPES.GET_BOOKING_START,getBooking)\n}\n\nexport function* bookingSagas () {\n    yield all([call(onGetBookingStart)])\n}"]},"metadata":{},"sourceType":"module"}