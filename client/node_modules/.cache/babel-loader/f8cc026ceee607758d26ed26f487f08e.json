{"ast":null,"code":"var _jsxFileName = \"/Users/thuongle/Desktop/e-ecommerce/client/src/components/card-item/card-item.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Button } from 'antd';\nimport { MoreOutlined, ShoppingCartOutlined } from '@ant-design/icons';\nimport { addItemToCart } from '../../redux/cart/cart.action';\nimport './card-item.styles.scss';\nimport CardItemContent from '../card-item-content/card-item-content.component';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionLoading } from '../../redux/shop/shop.selector';\nconst {\n  Meta\n} = Card;\n\nconst CardItem = ({\n  cartItem,\n  addItemToCart,\n  match,\n  history,\n  isLoading\n}) => {\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"card-container\",\n    hoverable: true,\n    loading: isLoading,\n    cover: /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"example\",\n      className: \"card-image\",\n      style: {\n        width: '100%'\n      },\n      src: cartItem.photoURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }),\n    actions: [/*#__PURE__*/React.createElement(Button, {\n      key: \"submit\",\n      type: \"primary\",\n      onClick: () => addItemToCart(cartItem),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, \"Add To Card\", /*#__PURE__*/React.createElement(ShoppingCartOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"link\",\n      onClick: () => history.push(`${match.url}/${cartItem.idProduct}`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"More Detail\", /*#__PURE__*/React.createElement(MoreOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Meta, {\n    title: /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: '1.6rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }\n    }, cartItem.nameEN),\n    description: /*#__PURE__*/React.createElement(CardItemContent, {\n      cartItem: cartItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItemToCart: cartItem => dispatch(addItemToCart(cartItem))\n});\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectIsCollectionLoading\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(CardItem);","map":{"version":3,"sources":["/Users/thuongle/Desktop/e-ecommerce/client/src/components/card-item/card-item.component.jsx"],"names":["React","connect","Card","Button","MoreOutlined","ShoppingCartOutlined","addItemToCart","CardItemContent","createStructuredSelector","selectIsCollectionLoading","Meta","CardItem","cartItem","match","history","isLoading","width","photoURL","push","url","idProduct","fontSize","nameEN","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;AACA,SAASC,YAAT,EAAuBC,oBAAvB,QAAmD,mBAAnD;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,OAAO,yBAAP;AACA,OAAOC,eAAP,MAA4B,kDAA5B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,yBAAT,QAA0C,gCAA1C;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAWR,IAAjB;;AAEA,MAAMS,QAAQ,GAAG,CAAC;AAChBC,EAAAA,QADgB;AACNN,EAAAA,aADM;AACUO,EAAAA,KADV;AACiBC,EAAAA,OADjB;AACyBC,EAAAA;AADzB,CAAD,KAEX;AAEJ,sBACE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,OAAO,EAAIA,SAHb;AAIE,IAAA,KAAK,eACH;AACE,MAAA,GAAG,EAAC,SADN;AAEE,MAAA,SAAS,EAAC,YAFZ;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAHT;AAIE,MAAA,GAAG,EAAEJ,QAAQ,CAACK,QAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ;AAYE,IAAA,OAAO,EAAE,cACP,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,SAA1B;AAAoC,MAAA,OAAO,EAAE,MAAMX,aAAa,CAACM,QAAD,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADO,eAKP,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAG,MAAME,OAAO,CAACI,IAAR,CAAc,GAAEL,KAAK,CAACM,GAAI,IAAGP,QAAQ,CAACQ,SAAU,EAAhD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAGE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CALO,CAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAwBE,oBAAC,IAAD;AACE,IAAA,KAAK,eAAE;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCT,QAAQ,CAACU,MAA/C,CADT;AAEE,IAAA,WAAW,eACT,oBAAC,eAAD;AAAiB,MAAA,QAAQ,EAAEV,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,CADF;AAiCD,CArCD;;AAsCA,MAAMW,kBAAkB,GAAIC,QAAD,KAAe;AACxClB,EAAAA,aAAa,EAAGM,QAAD,IAAcY,QAAQ,CAAClB,aAAa,CAACM,QAAD,CAAd;AADG,CAAf,CAA3B;;AAGA,MAAMa,eAAe,GAAGjB,wBAAwB,CAAC;AAC/CO,EAAAA,SAAS,EAAGN;AADmC,CAAD,CAAhD;AAIA,eAAgBR,OAAO,CAACwB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CZ,QAA7C,CAAhB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Button } from 'antd';\nimport { MoreOutlined, ShoppingCartOutlined } from '@ant-design/icons';\nimport { addItemToCart } from '../../redux/cart/cart.action';\nimport './card-item.styles.scss';\nimport CardItemContent from '../card-item-content/card-item-content.component';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionLoading } from '../../redux/shop/shop.selector';\n\nconst { Meta } = Card;\n\nconst CardItem = ({\n  cartItem, addItemToCart , match, history,isLoading\n}) => {\n  \n  return (\n    <Card\n      className=\"card-container\"\n      hoverable\n      loading = {isLoading}\n      cover={(\n        <img\n          alt=\"example\"\n          className=\"card-image\"\n          style={{ width: '100%'}}\n          src={cartItem.photoURL}\n        />\n    )}\n      actions={[\n        <Button key=\"submit\" type=\"primary\" onClick={() => addItemToCart(cartItem)}>\n          Add To Card\n          <ShoppingCartOutlined />\n        </Button>,\n        <Button type=\"link\" onClick ={() => history.push(`${match.url}/${cartItem.idProduct}`)}>\n\n          More Detail\n          <MoreOutlined />\n        </Button>,\n      ]}\n    >\n      <Meta\n        title={<span style={{ fontSize: '1.6rem' }}>{cartItem.nameEN}</span>}\n        description={\n          <CardItemContent cartItem={cartItem} />\n      }\n      />\n    </Card>\n  );\n};\nconst mapDispatchToProps = (dispatch) => ({\n  addItemToCart: (cartItem) => dispatch(addItemToCart(cartItem)),\n});\nconst mapStateToProps = createStructuredSelector({\n  isLoading : selectIsCollectionLoading\n})\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(CardItem));\n"]},"metadata":{},"sourceType":"module"}