{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport axios from 'axios';\nimport SHOP_ACTION_TYPES from './shop.types';\nimport { getCollectionSuccess, changeCurrentPage } from './shop.action';\nexport function fetchCollectionToServer(limit, page, nameEN) {\n  return axios(`http://localhost:2222/product?limit=${limit}&page=${page}&nameEN=${nameEN}`, {\n    method: \"get\"\n  });\n}\nexport function* fetchCollectionAsync({\n  payload\n}) {\n  let page = 1;\n  let limit = 13;\n  let nameEN = \" \";\n\n  if (payload) {\n    page = payload.page;\n    limit = payload.limit;\n    nameEN = payload.nameEN;\n  }\n\n  yield put(changeCurrentPage(page));\n  const {\n    data: {\n      data: {\n        products\n      }\n    }\n  } = yield call(fetchCollectionToServer, limit, page, nameEN);\n  yield put(getCollectionSuccess(products));\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(SHOP_ACTION_TYPES.GET_COLLECTIONS_START, fetchCollectionAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/Users/thuongle/Desktop/e-ecommerce/client/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","axios","SHOP_ACTION_TYPES","getCollectionSuccess","changeCurrentPage","fetchCollectionToServer","limit","page","nameEN","method","fetchCollectionAsync","payload","data","products","fetchCollectionsStart","GET_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAqBC,IAArB,EAA2BC,GAA3B,EAAiCC,GAAjC,QAA4C,oBAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,cAA9B;AACA,SAAQC,oBAAR,EAA8BC,iBAA9B,QAAsD,eAAtD;AAEA,OAAO,SAASC,uBAAT,CAAiCC,KAAjC,EAAuCC,IAAvC,EAA4CC,MAA5C,EAAoD;AACvD,SAAOP,KAAK,CAAE,uCAAsCK,KAAM,SAAQC,IAAK,WAAUC,MAAO,EAA5E,EAA8E;AACtFC,IAAAA,MAAM,EAAE;AAD8E,GAA9E,CAAZ;AAGH;AAID,OAAO,UAAUC,oBAAV,CAA+B;AAACC,EAAAA;AAAD,CAA/B,EAA0C;AAC7C,MAAIJ,IAAI,GAAG,CAAX;AACA,MAAID,KAAK,GAAG,EAAZ;AACA,MAAIE,MAAM,GAAG,GAAb;;AACA,MAAGG,OAAH,EAAY;AACRJ,IAAAA,IAAI,GAAGI,OAAO,CAACJ,IAAf;AACAD,IAAAA,KAAK,GAAGK,OAAO,CAACL,KAAhB;AACAE,IAAAA,MAAM,GAAGG,OAAO,CAACH,MAAjB;AACH;;AACD,QAAMT,GAAG,CAACK,iBAAiB,CAACG,IAAD,CAAlB,CAAT;AACA,QAAM;AAACK,IAAAA,IAAI,EAAG;AAACA,MAAAA,IAAI,EAAG;AAACC,QAAAA;AAAD;AAAR;AAAR,MAA+B,MAAMf,IAAI,CAACO,uBAAD,EAAyBC,KAAzB,EAA+BC,IAA/B,EAAoCC,MAApC,CAA/C;AACA,QAAMT,GAAG,CAACI,oBAAoB,CAACU,QAAD,CAArB,CAAT;AAEH;AAID,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMjB,UAAU,CAACK,iBAAiB,CAACa,qBAAnB,EAAyCL,oBAAzC,CAAhB;AACH;AAGD,OAAO,UAAUM,SAAV,GAAuB;AAC1B,QAAMhB,GAAG,CAAC,CAACF,IAAI,CAACgB,qBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest , call ,put , all } from 'redux-saga/effects';\nimport axios from 'axios';\nimport SHOP_ACTION_TYPES from './shop.types';\nimport {getCollectionSuccess ,changeCurrentPage} from './shop.action';\n\nexport function fetchCollectionToServer(limit,page,nameEN) {\n    return axios(`http://localhost:2222/product?limit=${limit}&page=${page}&nameEN=${nameEN}`,{\n        method: \"get\",\n    })\n}\n\n\n\nexport function* fetchCollectionAsync({payload}) { \n    let page = 1;\n    let limit = 13;\n    let nameEN = \" \";\n    if(payload) {\n        page = payload.page;\n        limit = payload.limit\n        nameEN = payload.nameEN\n    }\n    yield put(changeCurrentPage(page))\n    const {data : {data : {products}}} = yield call(fetchCollectionToServer,limit,page,nameEN);\n    yield put(getCollectionSuccess(products))\n    \n}\n\n\n\nexport function* fetchCollectionsStart() {\n    yield takeLatest(SHOP_ACTION_TYPES.GET_COLLECTIONS_START,fetchCollectionAsync)\n}\n\n\nexport function* shopSagas () {\n    yield all([call(fetchCollectionsStart)])\n}"]},"metadata":{},"sourceType":"module"}