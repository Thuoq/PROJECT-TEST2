{"ast":null,"code":"var _jsxFileName = \"/Users/thuongle/Desktop/e-commerce/src/components/information-user/information-user.component.jsx\";\nimport React, { useState } from 'react';\nimport { Form, Input, Button, InputNumber, Layout } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nconst {\n  Content\n} = Layout;\n\nconst InformationUser = () => {\n  const [componentSize, setComponentSize] = useState('default');\n\n  const onFormLayoutChange = ({\n    size\n  }) => {\n    setComponentSize(size);\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    style: {\n      padding: '0 24px 24px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    style: {\n      padding: 24,\n      margin: 0,\n      minHeight: 600\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    labelCol: {\n      span: 4\n    },\n    wrapperCol: {\n      span: 14\n    },\n    layout: \"horizontal\",\n    initialValues: {\n      size: componentSize\n    },\n    onValuesChange: onFormLayoutChange,\n    size: componentSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"User Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"InputNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    style: {\n      width: '70%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, \"Update Me\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.List, {\n    name: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, (fields, {\n    add,\n    remove\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, fields.map(field => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Item, Object.assign({\n    label: \"Address\"\n  }, field, {\n    name: [field.name, 'address'],\n    fieldKey: [field.fieldKey, 'address'],\n    rules: [{\n      required: true,\n      message: 'Missing Address name'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Address\",\n    style: {\n      width: '80%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(MinusCircleOutlined, {\n    onClick: () => {\n      remove(field.name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"dashed\",\n    onClick: () => {\n      add();\n    },\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PlusOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 23\n    }\n  }), ' ', \"Add field\")))))));\n};\n\nexport default InformationUser;","map":{"version":3,"sources":["/Users/thuongle/Desktop/e-commerce/src/components/information-user/information-user.component.jsx"],"names":["React","useState","Form","Input","Button","InputNumber","Layout","MinusCircleOutlined","PlusOutlined","Content","InformationUser","componentSize","setComponentSize","onFormLayoutChange","size","padding","margin","minHeight","span","width","fields","add","remove","map","field","name","fieldKey","required","message"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport {\n  Form, Input, Button, InputNumber, Layout,\n} from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\n\nconst { Content } = Layout;\nconst InformationUser = () => {\n  const [componentSize, setComponentSize] = useState('default');\n\n  const onFormLayoutChange = ({ size }) => {\n    setComponentSize(size);\n  };\n  return (\n    <Layout style={{ padding: '0 24px 24px' }}>\n      <Content style={{\n        padding: 24,\n        margin: 0,\n        minHeight: 600,\n      }}\n      >\n        <div>\n          <Form\n            labelCol={{\n              span: 4,\n            }}\n            wrapperCol={{\n              span: 14,\n            }}\n            layout=\"horizontal\"\n            initialValues={{\n              size: componentSize,\n            }}\n            onValuesChange={onFormLayoutChange}\n            size={componentSize}\n          >\n            <Form.Item label=\"User Name\">\n              <Input />\n            </Form.Item>\n            <Form.Item label=\"InputNumber\">\n              <InputNumber style={{ width: '70%' }} />\n            </Form.Item>\n            \n            <Form.Item>\n              <Button>Update Me</Button>\n            </Form.Item>\n          </Form>\n        </div>\n        <div>\n        <Form.List name=\"address\">\n              {(fields, { add, remove }) => (\n                <div>\n                  {fields.map((field) => (\n                    <>\n                      <Form.Item\n                        label=\"Address\"\n                        {...field}\n                        name={[field.name, 'address']}\n                        fieldKey={[field.fieldKey, 'address']}\n                        rules={[\n                          { required: true, message: 'Missing Address name' },\n                        ]}\n                      >\n                        <Input placeholder=\"Address\" style={{ width: '80%' }} />\n                        <MinusCircleOutlined\n                          onClick={() => {\n                              remove(field.name);\n                            }}\n                        />\n                      </Form.Item>\n                    </>\n                  ))}\n\n                  <Form.Item>\n                    <Button\n                      type=\"dashed\"\n                      onClick={() => {\n                        add();\n                      }}\n                      block\n                    >\n                      <PlusOutlined />\n                      {' '}\n                      Add field\n                    </Button>\n                  </Form.Item>\n                </div>\n              )}\n            </Form.List>\n        </div>\n      </Content>\n    </Layout>\n  );\n};\n\nexport default InformationUser;\n"]},"metadata":{},"sourceType":"module"}